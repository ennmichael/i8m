!function(e){var r={};function n(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)n.d(t,o,function(r){return e[r]}.bind(null,o));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s=0)}([function(e,r,n){"use strict";n.r(r);var t={};function o(e){return t[e]||!1}var i=document.getElementById("frame").getContext("2d"),a={x:0,y:0,direction:{x:0,y:0}};i.fillStyle="red";var c=new WebSocket("ws://localhost:8080");c.onmessage=function(e){console.log(e);var r=JSON.parse(e.data);console.log(r)},c.onopen=function(){var e,r;!function(){function e(e){return function(r){switch(r.key){case"arrowLeft":t.arrowLeft=e;break;case"arrowRight":t.arrowRight=e;break;case"arrowUp":t.arrowUp=e;break;case"arrowDown":t.arrowDown=e}}}document.onkeydown=e(!0),document.onkeyup=e(!1)}(),setInterval((function(){c.send(JSON.stringify(a.direction))}),500),e=function(e){o("arrowLeft")&&(a.direction={x:-1,y:0}),o("arrowRight")&&(a.direction={x:1,y:0}),o("arrowUp")&&(a.direction={x:0,y:-1}),o("arrowDown")&&(a.direction={x:0,y:1}),i.clearRect(0,0,500,500),i.fillRect(a.x,a.y,20,20)},r=performance.now(),requestAnimationFrame((function n(t){var o=t-r;r=t,e(o),requestAnimationFrame(n)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,